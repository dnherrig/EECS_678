==14907== Memcheck, a memory error detector
==14907== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14907== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==14907== Command: /home/d643h874/EECS678/EECS_678/quash/quash
==14907== 
IMPLEMENT ME: src/execute.c(line 404): create_process()
IMPLEMENT ME: src/execute.c(line 497): run_script()
IMPLEMENT ME: src/execute.c(line 404): create_process()
IMPLEMENT ME: src/execute.c(line 404): create_process()
IMPLEMENT ME: src/execute.c(line 404): create_process()
IMPLEMENT ME: src/execute.c(line 404): create_process()
xargs: error closing file: Bad file descriptor
grep: (standard input): Bad file descriptor
xargs: error closing file
IMPLEMENT ME: src/execute.c(line 497): run_script()
IMPLEMENT ME: src/execute.c(line 404): create_process()
IMPLEMENT ME: src/execute.c(line 497): run_script()
==14907== 
==14907== HEAP SUMMARY:
==14907==     in use at exit: 192 bytes in 3 blocks
==14907==   total heap usage: 37 allocs, 34 frees, 1,078,198 bytes allocated
==14907== 
==14907== 128 bytes in 2 blocks are definitely lost in loss record 2 of 2
==14907==    at 0x4C2DB8F: malloc (vg_replace_malloc.c:299)
==14907==    by 0x40277B: new_jobQueueStruct (execute.c:45)
==14907==    by 0x404243: run_script (execute.c:459)
==14907==    by 0x401520: main (quash.c:132)
==14907== 
==14907== LEAK SUMMARY:
==14907==    definitely lost: 128 bytes in 2 blocks
==14907==    indirectly lost: 0 bytes in 0 blocks
==14907==      possibly lost: 0 bytes in 0 blocks
==14907==    still reachable: 64 bytes in 1 blocks
==14907==         suppressed: 0 bytes in 0 blocks
==14907== Reachable blocks (those to which a pointer was found) are not shown.
==14907== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==14907== 
==14907== For counts of detected and suppressed errors, rerun with: -v
==14907== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
